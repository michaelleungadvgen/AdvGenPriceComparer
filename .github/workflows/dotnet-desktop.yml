name: Build AdvGen Price Comparer

on:
  push:
    branches: [ "master", "main" ]
  pull_request:
    branches: [ "master", "main" ]

jobs:
  # Build Core Library (always works)
  build-core:
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [Debug, Release]
        
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore Core Library
      run: dotnet restore AdvGenPriceComparer.Core\AdvGenPriceComparer.Core.csproj

    - name: Build Core Library
      run: dotnet build AdvGenPriceComparer.Core\AdvGenPriceComparer.Core.csproj -c ${{ matrix.configuration }} --no-restore

    - name: Test Core Library
      run: dotnet test AdvGenPriceComparer.Core\AdvGenPriceComparer.Core.csproj -c ${{ matrix.configuration }} --no-build
      continue-on-error: true

    - name: Upload Core Library Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Core-Library-${{ matrix.configuration }}
        path: AdvGenPriceComparer.Core\bin\${{ matrix.configuration }}\**\*

  # Attempt WinUI build (may fail due to Windows App SDK issues)
  build-winui:
    runs-on: windows-latest
    needs: build-core
    strategy:
      matrix:
        configuration: [Release]
        platform: [x64]  # Limit to x64 only for CI stability
        
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET 8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    # Try to install WinUI workload
    - name: Install WinUI workload
      run: |
        dotnet workload install maui-windows
      continue-on-error: true

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Restore packages
      run: dotnet restore AdvGenPriceComparer.sln

    - name: Build Core Library
      run: dotnet build AdvGenPriceComparer.Core\AdvGenPriceComparer.Core.csproj -c ${{ matrix.configuration }} --no-restore

    # Attempt WinUI build with all packaging disabled
    - name: Build WinUI Application (may fail)
      run: |
        dotnet build AdvGenPriceComparer\AdvGenPriceComparer.Desktop.WinUI.csproj -c ${{ matrix.configuration }} -p:Platform=${{ matrix.platform }} -p:EnableMsixTooling=false -p:GenerateAppxPackageOnBuild=false -p:AppxPackageSigningEnabled=false -p:WindowsPackageType=None --no-restore
      continue-on-error: true

    # If build succeeds, try to publish
    - name: Publish WinUI Application (if build succeeded)
      run: |
        dotnet publish AdvGenPriceComparer\AdvGenPriceComparer.Desktop.WinUI.csproj -c ${{ matrix.configuration }} -p:Platform=${{ matrix.platform }} -p:EnableMsixTooling=false -p:WindowsPackageType=None -p:SelfContained=true -o publish\winui-${{ matrix.platform }}
      continue-on-error: true

    - name: Upload WinUI Build Artifacts (if available)
      uses: actions/upload-artifact@v4
      with:
        name: WinUI-Build-${{ matrix.configuration }}-${{ matrix.platform }}
        path: |
          publish\winui-${{ matrix.platform }}\**
          AdvGenPriceComparer\bin\${{ matrix.platform }}\${{ matrix.configuration }}\**\*.exe
          AdvGenPriceComparer\bin\${{ matrix.platform }}\${{ matrix.configuration }}\**\*.dll
      continue-on-error: true
      if: always()

  # Job for testing Python components
  test-python:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Test Python scripts
      run: |
        python -c "import sys; print('Python version:', sys.version)"
        python -c "import PyPDF2; print('PyPDF2 imported successfully')"
      continue-on-error: true